# Generated by Django 2.1.2 on 2018-12-13 06:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MysqlConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('host', models.CharField(max_length=128, verbose_name='地址')),
                ('port', models.IntegerField(default=3306, verbose_name='端口')),
                ('user', models.CharField(default='', max_length=32, verbose_name='用户名')),
                ('password', models.CharField(default='', max_length=64, verbose_name='密码')),
                ('is_type', models.SmallIntegerField(choices=[(0, '查询_只读'), (1, 'SQL审核'), (2, '查询_读写')], default=0, verbose_name='用途')),
                ('comment', models.CharField(max_length=128, null=True, verbose_name='主机描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'MySQL配置',
                'verbose_name_plural': 'MySQL配置',
                'db_table': 'sqlaudit_mysql_config',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MysqlSchemas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('user', models.CharField(max_length=30, verbose_name='用户名')),
                ('password', models.CharField(max_length=30, verbose_name='密码')),
                ('host', models.CharField(max_length=128, verbose_name='地址')),
                ('port', models.IntegerField(default=3306, verbose_name='端口')),
                ('schema', models.CharField(default='', max_length=64, verbose_name='schema信息')),
                ('is_type', models.SmallIntegerField(choices=[(0, '查询_只读'), (1, 'SQL审核'), (2, '查询_读写')], default=0, verbose_name='用途')),
                ('comment', models.CharField(max_length=128, null=True, verbose_name='主机描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'MySQL集群汇总库',
                'verbose_name_plural': 'MySQL集群汇总库',
                'db_table': 'sqlaudit_mysql_schemas',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SqlExportFiles',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('file_name', models.CharField(default='', max_length=256, verbose_name='文件名')),
                ('file_size', models.IntegerField(default=0, verbose_name='文件大小，单位B')),
                ('files', models.FileField(upload_to='files/%Y/%m/%d/')),
                ('content_type', models.CharField(default='', max_length=100, verbose_name='文件的类型')),
            ],
            options={
                'verbose_name': '数据导出',
                'verbose_name_plural': '数据导出',
                'db_table': 'sqlaudit_sql_export_excel',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SqlOrderReply',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键')),
                ('reply_contents', models.TextField(default='', verbose_name='回复内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='回复时间')),
            ],
            options={
                'verbose_name': '工单回复',
                'verbose_name_plural': '工单回复',
                'db_table': 'sqlaudit_sql_order_reply',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SqlOrdersContents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('description', models.CharField(default='', max_length=2048, verbose_name='需求')),
                ('sql_type', models.CharField(choices=[('DDL', 'DDL'), ('DML', 'DML'), ('OPS', 'OPS')], default='DML', max_length=5, verbose_name='工单类型')),
                ('proposer', models.CharField(default='', max_length=30, verbose_name='申请人')),
                ('auditor', models.CharField(default='', max_length=30, verbose_name='审核人')),
                ('audit_time', models.DateTimeField(auto_now_add=True, verbose_name='审核时间')),
                ('email_cc', models.CharField(default='', max_length=4096, verbose_name='抄送人')),
                ('host', models.CharField(default='', max_length=128, verbose_name='主机')),
                ('port', models.IntegerField(default=3306, verbose_name='端口')),
                ('database', models.CharField(default='', max_length=80, verbose_name='库名')),
                ('progress', models.CharField(choices=[('0', '待批准'), ('1', '未批准'), ('2', '已批准'), ('3', '处理中'), ('4', '已完成'), ('5', '已关闭'), ('6', '已勾住')], default='0', max_length=10, verbose_name='任务进度')),
                ('remark', models.CharField(default='', max_length=32, verbose_name='备注')),
                ('task_version', models.CharField(default='', max_length=256, verbose_name='上线任务版本')),
                ('close_user', models.CharField(default='', max_length=30, verbose_name='关闭记录的用户')),
                ('close_reason', models.CharField(default='', max_length=1024, verbose_name='关闭原因')),
                ('close_time', models.DateTimeField(auto_now_add=True, verbose_name='关闭时间')),
                ('contents', models.TextField(default='', verbose_name='提交的内容')),
                ('export_file_format', models.CharField(choices=[('xlsx', 'xlsx'), ('csv', 'csv'), ('txt', 'txt')], default='xlsx', max_length=30, verbose_name='导出的文件格式')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '工单记录',
                'verbose_name_plural': '工单记录',
                'db_table': 'sqlaudit_sqlorders_contents',
            },
        ),
        migrations.CreateModel(
            name='SqlOrdersEnvironment',
            fields=[
                ('envi_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='环境ID')),
                ('envi_name', models.CharField(default='', max_length=30, verbose_name='环境')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '工单环境',
                'verbose_name_plural': '工单环境',
                'db_table': 'sqlaudit_sqlorder_environment',
            },
        ),
        migrations.CreateModel(
            name='SqlOrdersExecTasks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('uid', models.IntegerField(default=0, verbose_name='申请用户uid')),
                ('user', models.CharField(max_length=30, verbose_name='申请用户')),
                ('executor', models.CharField(default='', max_length=30, verbose_name='工单执行人')),
                ('execition_time', models.DateTimeField(auto_now=True, verbose_name='工单执行时间')),
                ('runtime', models.CharField(default='0.00', max_length=1024, verbose_name='任务运行时间，单位s')),
                ('taskid', models.CharField(max_length=128, verbose_name='任务号')),
                ('related_id', models.IntegerField(default=0, verbose_name='关联SqlOrdersContents的主键id')),
                ('host', models.CharField(max_length=128, verbose_name='操作目标数据库主机')),
                ('database', models.CharField(max_length=80, verbose_name='操作目标数据库')),
                ('port', models.IntegerField(default=3306, verbose_name='端口')),
                ('sql', models.TextField(default='', verbose_name='执行的SQL')),
                ('sql_type', models.CharField(choices=[('DDL', 'DDL'), ('DML', 'DML'), ('OPS', 'OPS')], default='DML', max_length=5, verbose_name='SQL类型')),
                ('is_ghost', models.IntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否启用ghost改表')),
                ('ghost_pid', models.IntegerField(default=0, verbose_name='ghost进程pid')),
                ('exec_status', models.CharField(choices=[('0', '未执行'), ('1', '已完成'), ('2', '处理中'), ('3', '失败'), ('4', '异常')], default='0', max_length=10, verbose_name='执行进度')),
                ('affected_row', models.IntegerField(default=0, verbose_name='影响行数')),
                ('exec_log', models.TextField(default='', verbose_name='执行的记录')),
                ('rollback_sql', models.TextField(default='', verbose_name='回滚的SQL')),
                ('export_file_format', models.CharField(choices=[('xlsx', 'xlsx'), ('csv', 'csv'), ('txt', 'txt')], default='xlsx', max_length=30, verbose_name='导出的文件格式')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='生成时间')),
                ('envi', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='sqlorders.SqlOrdersEnvironment')),
            ],
            options={
                'verbose_name': '工单执行任务',
                'verbose_name_plural': '工单执行任务',
                'db_table': 'sqlaudit_sql_orders_execute_tasks',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SqlOrdersTasksVersions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('username', models.CharField(default='', max_length=128, verbose_name='创建用户')),
                ('tasks_version', models.CharField(default='', max_length=128, verbose_name='任务版本')),
                ('expire_time', models.DateTimeField(default='2000-11-01 01:01:01', verbose_name='任务截止上线日期')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': 'SQL工单上线任务版本',
                'verbose_name_plural': 'SQL工单上线任务版本',
                'db_table': 'sqlaudit_sql_orders_tasks_versions',
            },
        ),
        migrations.CreateModel(
            name='SysConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='主键id')),
                ('name', models.CharField(default='', max_length=256, verbose_name='名称')),
                ('key', models.CharField(default='', max_length=256, verbose_name='key')),
                ('value', models.TextField(blank=True, max_length=256, null=True, verbose_name='值')),
                ('is_enabled', models.CharField(choices=[('0', '启用'), ('1', '禁用')], default='1', max_length=2, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '系统配置',
                'verbose_name_plural': '系统配置',
                'db_table': 'sqlaudit_sys_config',
                'default_permissions': (),
            },
        ),
        migrations.AlterUniqueTogether(
            name='sqlorderstasksversions',
            unique_together={('tasks_version',)},
        ),
        migrations.AddField(
            model_name='sqlorderscontents',
            name='envi',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='sqlorders.SqlOrdersEnvironment'),
        ),
        migrations.AddField(
            model_name='sqlorderreply',
            name='reply',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sqlorders.SqlOrdersContents'),
        ),
    ]
